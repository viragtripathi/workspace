/**
 * @description Load existing concepts from AS
 */
Concepts.Flight rulefunction RuleFunctions.Loaders.LoadFlightFromAS {
	attribute {
		validity = ACTION;
	}
	scope {
		
		String flightKey;
	}
	body {
		String logContext = "SkyTeamBES.RuleFunctions.Loaders.LoadFlightFromAS";
		//String bagKey = flightKey;
		Object logger = Log.getLogger(logContext);
		Concepts.Flight flightConcept;
		
		try {
			Log.log(logger,"info", "flightKey " + flightKey);
			
			Events.ASChannel.Flight flightEvent = Event.createEvent("xslt://{{/Events/ASChannel/Flight}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"2.0\"><xsl:param name=\"flightKey\"/><xsl:template name=\"Function\" match=\"/\"><createEvent><event><FlightKey><xsl:value-of select=\"$flightKey\"/></FlightKey></event></createEvent></xsl:template></xsl:stylesheet>");
			flightEvent = AS.getEvent("/Channels/OutboundAS/flightOutbound",flightEvent);
			Log.log(logger,"info", "flight event  created from Tuple for flightKey : " + flightKey);
			
			if (flightEvent != null) {
			flightConcept = RuleFunctions.Mappers.MapFlightASEventToConcept(flightEvent);
			Log.log(logger,"info", "flight concept created from event for flightKey : " + flightKey);
			}	
		}
		catch (Exception ex) {
			Log.log(logger, "error", "Exception occured while loading flight from AS for: %s", flightConcept.FlightKey);
			System.debugOut(ex@stackTrace);
		}
	return flightConcept;
	
	}
}