/**
 * @description 
 * @author vtripath-win7vm
 */
rule Rules.Baggage.ProcessREROUTEDBaggage {
	attribute {
		priority = 5;
		forwardChain = true;
	}
	declare {
		
		Concepts.Baggage baggage;
	}
	when {
		baggage.EventType == Scorecards.BagggageEventTypes.REROUTED;
			baggage.isModified==true;
	}
	then {
		System.debugOut("Baggage REROUTED event received");
		
		String flightKey = baggage.OriginalFlightKey;
		
		//need to load the flight concept
		System.debugOut("Rules.Baggage.ProcessREROUTEDBaggage: flightKey = " + flightKey);
		String recordLocator = baggage.RecordLocator;
			
		Concepts.Passenger pax =RuleFunctions.Loaders.LoadPassengerFromAS(flightKey, recordLocator);
		
		if (pax != null){
			System.debugOut("Rules.Baggage.ProcessSCREENEDBaggage: passenger:flight loaded for flightKey = " + flightKey + "-" + recordLocator);			
			// send a notification to the passenger email/phone to check at the gate for details
			pax.IsModified=false;
			String EventType = Scorecards.PassengerEventTypes.BAGREROUTED;
			//create an outbound passenger event
			Events.PassengerEventInbound paxEvent = Event.createEvent("xslt://{{/Events/PassengerEventInbound}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:pnr=\"http://www.schemas.skyteam.com/2016/09/enterprise/Passenger\" version=\"2.0\"><xsl:param name=\"flightKey\"/><xsl:param name=\"pax\"/><xsl:param name=\"EventType\"/><xsl:template name=\"Function\" match=\"/\"><createEvent><event><FlightKey><xsl:value-of select=\"$flightKey\"/></FlightKey><payload><pnr:Passenger><pnr:EventType><xsl:value-of select=\"$EventType\"/></pnr:EventType><pnr:FlightKey><xsl:value-of select=\"$pax/FlightKey\"/></pnr:FlightKey><pnr:AirlineCode><xsl:value-of select=\"$pax/AirlineCode\"/></pnr:AirlineCode><pnr:FlightSegments><xsl:value-of select=\"$pax/FlightSegments\"/></pnr:FlightSegments><pnr:BagTags><xsl:value-of select=\"$pax/BagTags\"/></pnr:BagTags><pnr:FlightNumber><xsl:value-of select=\"$pax/FlightNumber\"/></pnr:FlightNumber><pnr:RecordLocator><xsl:value-of select=\"$pax/RecordLocator\"/></pnr:RecordLocator><pnr:CutomerId><xsl:value-of select=\"$pax/CutomerId\"/></pnr:CutomerId><pnr:BookingId><xsl:value-of select=\"$pax/BookingId\"/></pnr:BookingId><pnr:FirstName><xsl:value-of select=\"$pax/FirstName\"/></pnr:FirstName><pnr:LastName><xsl:value-of select=\"$pax/LastName\"/></pnr:LastName><pnr:SeatNo><xsl:value-of select=\"$pax/SeatNo\"/></pnr:SeatNo><pnr:FrequentFlyerStaus><xsl:value-of select=\"$pax/FrequentFlyerStaus\"/></pnr:FrequentFlyerStaus><pnr:OriginLocalDate><xsl:value-of select=\"$pax/OriginLocalDate\"/></pnr:OriginLocalDate><pnr:OriginStnCode><xsl:value-of select=\"$pax/OriginStnCode\"/></pnr:OriginStnCode><pnr:DestStnCode><xsl:value-of select=\"$pax/DestStnCode\"/></pnr:DestStnCode></pnr:Passenger></payload></event></createEvent></xsl:template></xsl:stylesheet>");
			Event.routeTo(paxEvent,"/Channels/OutboundJMS/passengerEventOutbound",null);
			
		}else{
			System.debugOut("Could not retriev passenger for flight" + flightKey + " record locator " + recordLocator);
		}
		
	}
}