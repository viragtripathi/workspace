/**
 * @description 
 * @author vtripath-win7vm
 */
rule Rules.Baggage.ProcessREROUTEDBaggage {
	attribute {
		priority = 5;
		forwardChain = true;
	}
	declare {
		
		Concepts.Baggage baggage;
	}
	when {
		baggage.EventType == Scorecards.BagggageEventTypes.REROUTED;
	}
	then {
		System.debugOut("Baggage REROUTED event received");
		
		String flightKey = baggage.OriginalFlightKey;
		//need to load the flight concept
		System.debugOut("Rules.Baggage.ProcessREROUTEDBaggage: flightKey = " + flightKey);
			
		// need to load the Flight Concept
		RuleFunctions.Loaders.LoadFlightFromAS(flightKey);
		System.debugOut("Rules.Baggage.ProcessREROUTEDBaggage: baggage:flight loaded for flightKey = " + flightKey);		
		// send a notification to the passenger email/phone
	}
}