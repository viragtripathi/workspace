/**
 * @description 
 * @author vtripath-win7vm
 */
rule Rules.Baggage.ProcessSCREENING_FAILEDBaggage {
	attribute {
		priority = 5;
		forwardChain = true;
	}
	declare {
		
		Concepts.Baggage baggage;
	}
	when {
		baggage.EventType == Scorecards.BagggageEventTypes.SCREENING_FAILED;
	}
	then {
		System.debugOut("Baggage SCREENING_FAILED event received");
		
		// load the passenger concept
		String flightKey = baggage.OriginalFlightKey;
		String recordLocator = baggage.RecordLocator;
		//need to load the flight concept
		System.debugOut("Rules.Baggage.ProcessSCREENING_FAILEDBaggage: flightKey = " + flightKey);
		Concepts.Passenger pax =RuleFunctions.Loaders.LoadPassengerFromAS(flightKey, recordLocator);
		
		if (pax != null){
			System.debugOut("Rules.Baggage.ProcessSCREENEDBaggage: passenger:flight loaded for flightKey = " + flightKey + "-" + recordLocator);			
			// send a notification to the passenger email/phone to check at the gate for details
			
		}else{
			System.debugOut("Could not retriev passenger for flight" + flightKey + " record locator " + recordLocator);
		}
	}
}